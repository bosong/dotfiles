# load zgen
source "${HOME}/.zgen/zgen.zsh"
source /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh

# check if there's no init script
if ! zgen saved; then
    echo "Creating a zgen save"

    zgen oh-my-zsh

    plugins=(git pyenv pod ruby python github npm osx pip screen web-search svn zsh-autosuggestions autojump brew)
    # plugins (set plugins then use source ~/.zshrc command)
    zgen oh-my-zsh plugins/git
    zgen oh-my-zsh plugins/sudo
    zgen oh-my-zsh plugins/command-not-found
    zgen load zsh-users/zsh-syntax-highlighting
#    zgen load /path/to/super-secret-private-plugin
    zgen load caiogondim/bullet-train-oh-my-zsh-theme bullet-train
    # completions
    zgen load zsh-users/zsh-completions src

    # theme
#    zgen oh-my-zsh themes/arrow

    zgen load caiogondim/bullet-train-oh-my-zsh-theme bullet-train
    # save all to init script
    zgen save
fi

# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="robbyrussell"
#ZSH_THEME="random"
#ZSH_THEME="bullet-train"

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

export PATH=.local/bin:$PATH
export PATH=/usr/sbin:/sbin:${PATH}$
export PATH=/usr/local/Cellar/mongodb/2.4.9/bin:${PATH}$
export PATH=/usr/local/sonarqube-7.2.1:${PATH}
export PATH=/usr/local/sonar-scanner-3.2.0.1227-macosx/bin:${PATH}
export PATH=/usr/local/sonarqube-5.6.7:${PATH}
export PATH=/usr/local/opt/podenv/bin:${PATH}
#source $HOME/.powerline/powerline/bindings/zsh/powerline.zsh

# Example aliases
  alias zshconfig="vim  ~/.zshrc"
  alias ohmyzsh="vim  ~/.oh-my-zsh"
  alias pc4='proxychains4'
  alias pc4_config='vim /usr/local/etc/proxychains.conf'
  alias sonar7='/usr/local/sonarqube-7.2.1/bin/macosx-universal-64/sonar.sh'
  alias sonar5='/usr/local/sonarqube-5.6.7/bin/macosx-universal-64/sonar.sh'
  alias sonar_run='./run-sonar-swift.sh -nounittests'
  alias sonar_scanner='/usr/local/sonar-scanner-3.2.0.1227-macosx/bin/sonar-scanner'
  alias zsh_to_bash='chsh -s /bin/bash'
  #pod_aliases
  alias pod_update='pod update --verbose --no-repo-update'
  alias pod_dependencies='pod dependencies'
  alias pod_dependencies_find='pod dependencies | grep'
  #app files_aliases
  alias app_dir='cd /Users/songbo/Documents/B_Work/XStock/'
  alias app_res='cd /Users/songbo/Documents/B_Work/XStock/res/'
  alias app_doc='cd /Users/songbo/Documents/B_Work/XStock/doc/'
  alias open_app='open /Users/songbo/Documents/B_Work/XStock/'
  alias open_res='open /Users/songbo/Documents/B_Work/XStock/res/'
  alias open_doc='open /Users/songbo/Documents/B_Work/XStock/doc/'
  #mac command_aliases
  alias show_all_files_YES='defaults write com.apple.finder AppleShowAllFiles YES'
  alias show_all_files_NO='defaults write com.apple.finder AppleShowAllFiles NO'
  alias show_all_allow='sudo spctl --master-disable'
  alias nm_find='sh /Users/songbo/Documents/B_Work/iOS开发常用脚本/nm_find.sh'
  #mac command_help
  alias command_help='cd /Users/songbo/Documents/B_Work/command_help'
  alias command_help_git='vim /Users/songbo/Documents/B_Work/command_help/command_help_git.txt'
  alias command_help_screen='vim /Users/songbo/Documents/B_Work/command_help/command_help_screen.txt'
  alias command_help_pod='vim /Users/songbo/Documents/B_Work/command_help/command_help_pod.txt'
  alias command_help_protobuf='vim /Users/songbo/Documents/B_Work/command_help/command_help_protobuf.txt'
  alias command_help_python='vim /Users/songbo/Documents/B_Work/command_help/command_help_python.txt'
  alias command_help_homebrew='vim /Users/songbo/Documents/B_Work/command_help/command_help_homebrew.txt'
  alias open_host='sudo vim /etc/hosts'
# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Uncomment this to disable bi-weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"

# Uncomment to change how often before auto-updates occur? (in days)
# export UPDATE_ZSH_DAYS=13

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want to disable command autocorrection
# DISABLE_CORRECTION="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
# COMPLETION_WAITING_DOTS="true"

# Uncomment following line if you want to disable marking untracked files under
# VCS as dirty. This makes repository status check for large repositories much,
# much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment following line if you want to  shown in the command execution time stamp
# in the history command output. The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|
# yyyy-mm-dd
# HIST_STAMPS="mm/dd/yyyy"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
#plugins=(git osx python pod gradle autojump)

#source $ZSH/oh-my-zsh.sh

# User configuration

export PATH=$HOME/bin:/usr/local/bin:$PATH
export EDITOR='vim'
# export MANPATH="/usr/local/man:$MANPATH"

# # Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# coreutils
if  type "brew" > /dev/null; then
    if brew list | grep coreutils > /dev/null ; then
        PATH="$(brew --prefix coreutils)/libexec/gnubin:$PATH"
        MANPATH="$(brew --prefix coreutils)/libexec/gnuman:$MANPATH"
        alias ls='ls -F --show-control-chars --color=auto'
        eval `gdircolors -b $HOME/.dir_colors`
    fi
fi

# ruby
export RBENV_ROOT=/usr/local/var/rbenv
if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi

if which pyenv-virtualenv-init > /dev/null; then eval "$(pyenv virtualenv-init -)"; fi

PATH=$PATH:/usr/local/share/npm/bin

# python
export PYENV_ROOT=/usr/local/opt/pyenv
if which pyenv > /dev/null; then eval "$(pyenv init -)"; fi

# Android
export ANDROID_HOME=/usr/local/opt/android-sdk
export GRADLE_HOME=/usr/local/opt/gradle/libexec

# THEOS
export THEOS=/opt/theos

# phabricator
export PATH="/usr/local/sbin:$PATH"
export PATH="$PATH:/opt/codereview/arcanist/bin:/opt/codereview/phabricator/bin"


# git
export PATH="/usr/local/opt/git/libexec/git-core:$PATH"

#export NVM_DIR=~/.nvm
#source $(brew --prefix nvm)/nvm.sh

# SONAR_HOME
SONAR_RUNNER_HOME=/usr/local/opt/sonarqube/libexec

export PATH="$HOME/.podenv/bin:$PATH"

#export http_proxy="socks5://127.0.0.1:1080"
#export https_proxy="socks5://127.0.0.1:1080"

